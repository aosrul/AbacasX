//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RateService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenDetail", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class TokenDetail : object
    {
        
        private int AssetAccountIdField;
        
        private string AssetIdField;
        
        private decimal AvailableBalanceField;
        
        private decimal BalanceField;
        
        private int CustodianIdField;
        
        private double MultiplierField;
        
        private string NameField;
        
        private string TokenIdField;
        
        private RateService.TokenStatusEnum TokenStatusField;
        
        private string TradingViewSymbolField;
        
        private int TrustIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AssetAccountId
        {
            get
            {
                return this.AssetAccountIdField;
            }
            set
            {
                this.AssetAccountIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetId
        {
            get
            {
                return this.AssetIdField;
            }
            set
            {
                this.AssetIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal AvailableBalance
        {
            get
            {
                return this.AvailableBalanceField;
            }
            set
            {
                this.AvailableBalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance
        {
            get
            {
                return this.BalanceField;
            }
            set
            {
                this.BalanceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustodianId
        {
            get
            {
                return this.CustodianIdField;
            }
            set
            {
                this.CustodianIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiplier
        {
            get
            {
                return this.MultiplierField;
            }
            set
            {
                this.MultiplierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenId
        {
            get
            {
                return this.TokenIdField;
            }
            set
            {
                this.TokenIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.TokenStatusEnum TokenStatus
        {
            get
            {
                return this.TokenStatusField;
            }
            set
            {
                this.TokenStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradingViewSymbol
        {
            get
            {
                return this.TradingViewSymbolField;
            }
            set
            {
                this.TradingViewSymbolField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TrustId
        {
            get
            {
                return this.TrustIdField;
            }
            set
            {
                this.TrustIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.Models")]
    public enum TokenStatusEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Generating = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suspended = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetRateData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class AssetRateData : object
    {
        
        private double AskRateField;
        
        private RateService.RateChangeEnum AskRateChangeTypeField;
        
        private string AssetIdField;
        
        private double BidRateField;
        
        private RateService.RateChangeEnum BidRateChangeTypeField;
        
        private System.DateTime LastUpdateField;
        
        private string PriceCurrencyField;
        
        private string RateProviderCodeField;
        
        private int RateProviderIdField;
        
        private RateService.RateTermsEnum RateTermsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AskRate
        {
            get
            {
                return this.AskRateField;
            }
            set
            {
                this.AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateChangeEnum AskRateChangeType
        {
            get
            {
                return this.AskRateChangeTypeField;
            }
            set
            {
                this.AskRateChangeTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssetId
        {
            get
            {
                return this.AssetIdField;
            }
            set
            {
                this.AssetIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BidRate
        {
            get
            {
                return this.BidRateField;
            }
            set
            {
                this.BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateChangeEnum BidRateChangeType
        {
            get
            {
                return this.BidRateChangeTypeField;
            }
            set
            {
                this.BidRateChangeTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate
        {
            get
            {
                return this.LastUpdateField;
            }
            set
            {
                this.LastUpdateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceCurrency
        {
            get
            {
                return this.PriceCurrencyField;
            }
            set
            {
                this.PriceCurrencyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RateProviderCode
        {
            get
            {
                return this.RateProviderCodeField;
            }
            set
            {
                this.RateProviderCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RateProviderId
        {
            get
            {
                return this.RateProviderIdField;
            }
            set
            {
                this.RateProviderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateTermsEnum RateTerms
        {
            get
            {
                return this.RateTermsField;
            }
            set
            {
                this.RateTermsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RateChangeEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.ViewModels")]
    public enum RateChangeEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Up = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Down = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoChange = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RateTermsEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.Models")]
    public enum RateTermsEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AssetPerCurrency = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyPerAsset = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenRateData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class TokenRateData : object
    {
        
        private double AskRateField;
        
        private RateService.RateChangeEnum AskRateChangeTypeField;
        
        private double AssetAskRateField;
        
        private double AssetBidRateField;
        
        private double BidRateField;
        
        private RateService.RateChangeEnum BidRateChangeTypeField;
        
        private System.DateTime LastUpdateField;
        
        private double MultiplierField;
        
        private string PriceCurrencyField;
        
        private RateService.TokenRateTermsEnum RateTermsField;
        
        private string TokenIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AskRate
        {
            get
            {
                return this.AskRateField;
            }
            set
            {
                this.AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateChangeEnum AskRateChangeType
        {
            get
            {
                return this.AskRateChangeTypeField;
            }
            set
            {
                this.AskRateChangeTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AssetAskRate
        {
            get
            {
                return this.AssetAskRateField;
            }
            set
            {
                this.AssetAskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AssetBidRate
        {
            get
            {
                return this.AssetBidRateField;
            }
            set
            {
                this.AssetBidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BidRate
        {
            get
            {
                return this.BidRateField;
            }
            set
            {
                this.BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateChangeEnum BidRateChangeType
        {
            get
            {
                return this.BidRateChangeTypeField;
            }
            set
            {
                this.BidRateChangeTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate
        {
            get
            {
                return this.LastUpdateField;
            }
            set
            {
                this.LastUpdateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Multiplier
        {
            get
            {
                return this.MultiplierField;
            }
            set
            {
                this.MultiplierField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PriceCurrency
        {
            get
            {
                return this.PriceCurrencyField;
            }
            set
            {
                this.PriceCurrencyField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.TokenRateTermsEnum RateTerms
        {
            get
            {
                return this.RateTermsField;
            }
            set
            {
                this.RateTermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenId
        {
            get
            {
                return this.TokenIdField;
            }
            set
            {
                this.TokenIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenRateTermsEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.ViewModels")]
    public enum TokenRateTermsEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TokenPerCurrency = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CurrencyPerToken = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenPairRateData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class TokenPairRateData : object
    {
        
        private double AskRateField;
        
        private double BidRateField;
        
        private string Currency1Field;
        
        private double Currency1AskRateField;
        
        private double Currency1BidRateField;
        
        private RateService.RateTermsEnum Currency1RateTermsField;
        
        private string Currency2Field;
        
        private double Currency2AskRateField;
        
        private double Currency2BidRateField;
        
        private RateService.RateTermsEnum Currency2RateTermsField;
        
        private double CurrencyPairAskRateField;
        
        private double CurrencyPairBidRateField;
        
        private RateService.CurrencyPairRateTermsEnum CurrencyPairRateTermsField;
        
        private System.DateTime LastUpdateField;
        
        private RateService.TokenPairRateTermsEnum RateTermsField;
        
        private double Token1AskRateField;
        
        private double Token1BidRateField;
        
        private string Token1IdField;
        
        private RateService.TokenRateTermsEnum Token1RateTermsField;
        
        private double Token2AskRateField;
        
        private double Token2BidRateField;
        
        private string Token2IdField;
        
        private RateService.TokenRateTermsEnum Token2RateTermsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AskRate
        {
            get
            {
                return this.AskRateField;
            }
            set
            {
                this.AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BidRate
        {
            get
            {
                return this.BidRateField;
            }
            set
            {
                this.BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency1
        {
            get
            {
                return this.Currency1Field;
            }
            set
            {
                this.Currency1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Currency1AskRate
        {
            get
            {
                return this.Currency1AskRateField;
            }
            set
            {
                this.Currency1AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Currency1BidRate
        {
            get
            {
                return this.Currency1BidRateField;
            }
            set
            {
                this.Currency1BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateTermsEnum Currency1RateTerms
        {
            get
            {
                return this.Currency1RateTermsField;
            }
            set
            {
                this.Currency1RateTermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency2
        {
            get
            {
                return this.Currency2Field;
            }
            set
            {
                this.Currency2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Currency2AskRate
        {
            get
            {
                return this.Currency2AskRateField;
            }
            set
            {
                this.Currency2AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Currency2BidRate
        {
            get
            {
                return this.Currency2BidRateField;
            }
            set
            {
                this.Currency2BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateTermsEnum Currency2RateTerms
        {
            get
            {
                return this.Currency2RateTermsField;
            }
            set
            {
                this.Currency2RateTermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrencyPairAskRate
        {
            get
            {
                return this.CurrencyPairAskRateField;
            }
            set
            {
                this.CurrencyPairAskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double CurrencyPairBidRate
        {
            get
            {
                return this.CurrencyPairBidRateField;
            }
            set
            {
                this.CurrencyPairBidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.CurrencyPairRateTermsEnum CurrencyPairRateTerms
        {
            get
            {
                return this.CurrencyPairRateTermsField;
            }
            set
            {
                this.CurrencyPairRateTermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate
        {
            get
            {
                return this.LastUpdateField;
            }
            set
            {
                this.LastUpdateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.TokenPairRateTermsEnum RateTerms
        {
            get
            {
                return this.RateTermsField;
            }
            set
            {
                this.RateTermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Token1AskRate
        {
            get
            {
                return this.Token1AskRateField;
            }
            set
            {
                this.Token1AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Token1BidRate
        {
            get
            {
                return this.Token1BidRateField;
            }
            set
            {
                this.Token1BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token1Id
        {
            get
            {
                return this.Token1IdField;
            }
            set
            {
                this.Token1IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.TokenRateTermsEnum Token1RateTerms
        {
            get
            {
                return this.Token1RateTermsField;
            }
            set
            {
                this.Token1RateTermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Token2AskRate
        {
            get
            {
                return this.Token2AskRateField;
            }
            set
            {
                this.Token2AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Token2BidRate
        {
            get
            {
                return this.Token2BidRateField;
            }
            set
            {
                this.Token2BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token2Id
        {
            get
            {
                return this.Token2IdField;
            }
            set
            {
                this.Token2IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.TokenRateTermsEnum Token2RateTerms
        {
            get
            {
                return this.Token2RateTermsField;
            }
            set
            {
                this.Token2RateTermsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyPairRateTermsEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.ViewModels")]
    public enum CurrencyPairRateTermsEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Currency1PerCurrency2 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Currency2PerCurrency1 = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TokenPairRateTermsEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.ViewModels")]
    public enum TokenPairRateTermsEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Token1PerToken2 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Token2PerToken1 = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CurrencyPairRateData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class CurrencyPairRateData : object
    {
        
        private double AskRateField;
        
        private RateService.RateChangeEnum AskRateChangeTypeField;
        
        private double BidRateField;
        
        private RateService.RateChangeEnum BidRateChangeTypeField;
        
        private string Currency1Field;
        
        private double Currency1AskRateField;
        
        private double Currency1BidRateField;
        
        private RateService.RateTermsEnum Currency1RateTermsField;
        
        private string Currency2Field;
        
        private double Currency2AskRateField;
        
        private double Currency2BidRateField;
        
        private RateService.RateTermsEnum Currency2RateTermsField;
        
        private System.DateTime LastUpdateField;
        
        private RateService.CurrencyPairRateTermsEnum RateTermsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double AskRate
        {
            get
            {
                return this.AskRateField;
            }
            set
            {
                this.AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateChangeEnum AskRateChangeType
        {
            get
            {
                return this.AskRateChangeTypeField;
            }
            set
            {
                this.AskRateChangeTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double BidRate
        {
            get
            {
                return this.BidRateField;
            }
            set
            {
                this.BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateChangeEnum BidRateChangeType
        {
            get
            {
                return this.BidRateChangeTypeField;
            }
            set
            {
                this.BidRateChangeTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency1
        {
            get
            {
                return this.Currency1Field;
            }
            set
            {
                this.Currency1Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Currency1AskRate
        {
            get
            {
                return this.Currency1AskRateField;
            }
            set
            {
                this.Currency1AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Currency1BidRate
        {
            get
            {
                return this.Currency1BidRateField;
            }
            set
            {
                this.Currency1BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateTermsEnum Currency1RateTerms
        {
            get
            {
                return this.Currency1RateTermsField;
            }
            set
            {
                this.Currency1RateTermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Currency2
        {
            get
            {
                return this.Currency2Field;
            }
            set
            {
                this.Currency2Field = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Currency2AskRate
        {
            get
            {
                return this.Currency2AskRateField;
            }
            set
            {
                this.Currency2AskRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Currency2BidRate
        {
            get
            {
                return this.Currency2BidRateField;
            }
            set
            {
                this.Currency2BidRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.RateTermsEnum Currency2RateTerms
        {
            get
            {
                return this.Currency2RateTermsField;
            }
            set
            {
                this.Currency2RateTermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdate
        {
            get
            {
                return this.LastUpdateField;
            }
            set
            {
                this.LastUpdateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RateService.CurrencyPairRateTermsEnum RateTerms
        {
            get
            {
                return this.RateTermsField;
            }
            set
            {
                this.RateTermsField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RateService.IRateService", CallbackContract=typeof(RateService.IRateServiceCallback))]
    public interface IRateService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/SubscribeToAssetRateUpdate", ReplyAction="http://tempuri.org/IRateService/SubscribeToAssetRateUpdateResponse")]
        System.Threading.Tasks.Task SubscribeToAssetRateUpdateAsync(string AssetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/UnSubscribeToAssetRateUpdate", ReplyAction="http://tempuri.org/IRateService/UnSubscribeToAssetRateUpdateResponse")]
        System.Threading.Tasks.Task UnSubscribeToAssetRateUpdateAsync(string AssetId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/SubscribeToCurrencyPairRateUpdate", ReplyAction="http://tempuri.org/IRateService/SubscribeToCurrencyPairRateUpdateResponse")]
        System.Threading.Tasks.Task SubscribeToCurrencyPairRateUpdateAsync(string Currency1, string Currency2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/UnSubscribeToCurrencyPairRateUpdate", ReplyAction="http://tempuri.org/IRateService/UnSubscribeToCurrencyPairRateUpdateResponse")]
        System.Threading.Tasks.Task UnSubscribeToCurrencyPairRateUpdateAsync(string Currency1, string Currency2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/SubscribeToTokenPairRateUpdate", ReplyAction="http://tempuri.org/IRateService/SubscribeToTokenPairRateUpdateResponse")]
        System.Threading.Tasks.Task SubscribeToTokenPairRateUpdateAsync(string Token1, string Token2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/UnSubscribeToTokenPairRateUpdate", ReplyAction="http://tempuri.org/IRateService/UnSubscribeToTokenPairRateUpdateResponse")]
        System.Threading.Tasks.Task UnSubscribeToTokenPairRateUpdateAsync(string Token, string Token2);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/SubscribeToTokenRateUpdate", ReplyAction="http://tempuri.org/IRateService/SubscribeToTokenRateUpdateResponse")]
        System.Threading.Tasks.Task SubscribeToTokenRateUpdateAsync(string TokenId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/UnSubscribeToTokenRateUpdate", ReplyAction="http://tempuri.org/IRateService/UnSubscribeToTokenRateUpdateResponse")]
        System.Threading.Tasks.Task UnSubscribeToTokenRateUpdateAsync(string TokenId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/UnSubscribeAllRateUpdates", ReplyAction="http://tempuri.org/IRateService/UnSubscribeAllRateUpdatesResponse")]
        System.Threading.Tasks.Task UnSubscribeAllRateUpdatesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/GetTokenDetail", ReplyAction="http://tempuri.org/IRateService/GetTokenDetailResponse")]
        System.Threading.Tasks.Task<RateService.TokenDetail> GetTokenDetailAsync(string TokenId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/GetAssetList", ReplyAction="http://tempuri.org/IRateService/GetAssetListResponse")]
        System.Threading.Tasks.Task<string[]> GetAssetListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/GetTokenList", ReplyAction="http://tempuri.org/IRateService/GetTokenListResponse")]
        System.Threading.Tasks.Task<string[]> GetTokenListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/GetAssetRateList", ReplyAction="http://tempuri.org/IRateService/GetAssetRateListResponse")]
        System.Threading.Tasks.Task<RateService.AssetRateData[]> GetAssetRateListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/GetTokenRateList", ReplyAction="http://tempuri.org/IRateService/GetTokenRateListResponse")]
        System.Threading.Tasks.Task<RateService.TokenRateData[]> GetTokenRateListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/GetTokenPairRate", ReplyAction="http://tempuri.org/IRateService/GetTokenPairRateResponse")]
        System.Threading.Tasks.Task<RateService.TokenPairRateData> GetTokenPairRateAsync(string Token1Id, string Token2Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IRateService/GetTokenRate", ReplyAction="http://tempuri.org/IRateService/GetTokenRateResponse")]
        System.Threading.Tasks.Task<RateService.TokenRateData> GetTokenRateAsync(string Token1Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IRateServiceCallback
    {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRateService/AssetRateUpdate")]
        void AssetRateUpdate(RateService.AssetRateData AssetRateRecord);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRateService/CurrencyPairRateUpdate")]
        void CurrencyPairRateUpdate(RateService.CurrencyPairRateData CurrencyPairRateRecord);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRateService/TokenRateUpdate")]
        void TokenRateUpdate(RateService.TokenRateData TokenRateRecord);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IRateService/TokenPairRateUpdate")]
        void TokenPairRateUpdate(RateService.TokenPairRateData TokenPairRateRecord);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IRateServiceChannel : RateService.IRateService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class RateServiceClientBase : System.ServiceModel.DuplexClientBase<RateService.IRateService>, RateService.IRateService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public RateServiceClientBase(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance, RateServiceClientBase.GetDefaultBinding(), RateServiceClientBase.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.NetHttpBinding_IRateService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RateServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration) : 
                base(callbackInstance, RateServiceClientBase.GetBindingForEndpoint(endpointConfiguration), RateServiceClientBase.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RateServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(callbackInstance, RateServiceClientBase.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RateServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, RateServiceClientBase.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public RateServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task SubscribeToAssetRateUpdateAsync(string AssetId)
        {
            return base.Channel.SubscribeToAssetRateUpdateAsync(AssetId);
        }
        
        public System.Threading.Tasks.Task UnSubscribeToAssetRateUpdateAsync(string AssetId)
        {
            return base.Channel.UnSubscribeToAssetRateUpdateAsync(AssetId);
        }
        
        public System.Threading.Tasks.Task SubscribeToCurrencyPairRateUpdateAsync(string Currency1, string Currency2)
        {
            return base.Channel.SubscribeToCurrencyPairRateUpdateAsync(Currency1, Currency2);
        }
        
        public System.Threading.Tasks.Task UnSubscribeToCurrencyPairRateUpdateAsync(string Currency1, string Currency2)
        {
            return base.Channel.UnSubscribeToCurrencyPairRateUpdateAsync(Currency1, Currency2);
        }
        
        public System.Threading.Tasks.Task SubscribeToTokenPairRateUpdateAsync(string Token1, string Token2)
        {
            return base.Channel.SubscribeToTokenPairRateUpdateAsync(Token1, Token2);
        }
        
        public System.Threading.Tasks.Task UnSubscribeToTokenPairRateUpdateAsync(string Token, string Token2)
        {
            return base.Channel.UnSubscribeToTokenPairRateUpdateAsync(Token, Token2);
        }
        
        public System.Threading.Tasks.Task SubscribeToTokenRateUpdateAsync(string TokenId)
        {
            return base.Channel.SubscribeToTokenRateUpdateAsync(TokenId);
        }
        
        public System.Threading.Tasks.Task UnSubscribeToTokenRateUpdateAsync(string TokenId)
        {
            return base.Channel.UnSubscribeToTokenRateUpdateAsync(TokenId);
        }
        
        public System.Threading.Tasks.Task UnSubscribeAllRateUpdatesAsync()
        {
            return base.Channel.UnSubscribeAllRateUpdatesAsync();
        }
        
        public System.Threading.Tasks.Task<RateService.TokenDetail> GetTokenDetailAsync(string TokenId)
        {
            return base.Channel.GetTokenDetailAsync(TokenId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAssetListAsync()
        {
            return base.Channel.GetAssetListAsync();
        }
        
        public System.Threading.Tasks.Task<string[]> GetTokenListAsync()
        {
            return base.Channel.GetTokenListAsync();
        }
        
        public System.Threading.Tasks.Task<RateService.AssetRateData[]> GetAssetRateListAsync()
        {
            return base.Channel.GetAssetRateListAsync();
        }
        
        public System.Threading.Tasks.Task<RateService.TokenRateData[]> GetTokenRateListAsync()
        {
            return base.Channel.GetTokenRateListAsync();
        }
        
        public System.Threading.Tasks.Task<RateService.TokenPairRateData> GetTokenPairRateAsync(string Token1Id, string Token2Id)
        {
            return base.Channel.GetTokenPairRateAsync(Token1Id, Token2Id);
        }
        
        public System.Threading.Tasks.Task<RateService.TokenRateData> GetTokenRateAsync(string Token1Id)
        {
            return base.Channel.GetTokenRateAsync(Token1Id);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IRateService))
            {
                System.ServiceModel.NetHttpBinding result = new System.ServiceModel.NetHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IRateService))
            {
                return new System.ServiceModel.EndpointAddress("ws://localhost:8088/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return RateServiceClientBase.GetBindingForEndpoint(EndpointConfiguration.NetHttpBinding_IRateService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return RateServiceClientBase.GetEndpointAddress(EndpointConfiguration.NetHttpBinding_IRateService);
        }
        
        public enum EndpointConfiguration
        {
            
            NetHttpBinding_IRateService,
        }
    }
    
    public class AssetRateUpdateReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public AssetRateUpdateReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public RateService.AssetRateData AssetRateRecord
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((RateService.AssetRateData)(this.results[0]));
            }
        }
    }
    
    public class CurrencyPairRateUpdateReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public CurrencyPairRateUpdateReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public RateService.CurrencyPairRateData CurrencyPairRateRecord
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((RateService.CurrencyPairRateData)(this.results[0]));
            }
        }
    }
    
    public class TokenRateUpdateReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public TokenRateUpdateReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public RateService.TokenRateData TokenRateRecord
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((RateService.TokenRateData)(this.results[0]));
            }
        }
    }
    
    public class TokenPairRateUpdateReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public TokenPairRateUpdateReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public RateService.TokenPairRateData TokenPairRateRecord
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((RateService.TokenPairRateData)(this.results[0]));
            }
        }
    }
    
    public partial class RateServiceClient : RateServiceClientBase
    {
        
        public RateServiceClient(EndpointConfiguration endpointConfiguration) : 
                this(new RateServiceClientCallback(), endpointConfiguration)
        {
        }
        
        private RateServiceClient(RateServiceClientCallback callbackImpl, EndpointConfiguration endpointConfiguration) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfiguration)
        {
            callbackImpl.Initialize(this);
        }
        
        public RateServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new RateServiceClientCallback(), binding, remoteAddress)
        {
        }
        
        private RateServiceClient(RateServiceClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress)
        {
            callbackImpl.Initialize(this);
        }
        
        public RateServiceClient() : 
                this(new RateServiceClientCallback())
        {
        }
        
        private RateServiceClient(RateServiceClientCallback callbackImpl) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl))
        {
            callbackImpl.Initialize(this);
        }
        
        public event System.EventHandler<AssetRateUpdateReceivedEventArgs> AssetRateUpdateReceived;
        
        public event System.EventHandler<CurrencyPairRateUpdateReceivedEventArgs> CurrencyPairRateUpdateReceived;
        
        public event System.EventHandler<TokenRateUpdateReceivedEventArgs> TokenRateUpdateReceived;
        
        public event System.EventHandler<TokenPairRateUpdateReceivedEventArgs> TokenPairRateUpdateReceived;
        
        private void OnAssetRateUpdateReceived(object state)
        {
            if ((this.AssetRateUpdateReceived != null))
            {
                object[] results = ((object[])(state));
                this.AssetRateUpdateReceived(this, new AssetRateUpdateReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnCurrencyPairRateUpdateReceived(object state)
        {
            if ((this.CurrencyPairRateUpdateReceived != null))
            {
                object[] results = ((object[])(state));
                this.CurrencyPairRateUpdateReceived(this, new CurrencyPairRateUpdateReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnTokenRateUpdateReceived(object state)
        {
            if ((this.TokenRateUpdateReceived != null))
            {
                object[] results = ((object[])(state));
                this.TokenRateUpdateReceived(this, new TokenRateUpdateReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnTokenPairRateUpdateReceived(object state)
        {
            if ((this.TokenPairRateUpdateReceived != null))
            {
                object[] results = ((object[])(state));
                this.TokenPairRateUpdateReceived(this, new TokenPairRateUpdateReceivedEventArgs(results, null, false, null));
            }
        }
        
        private class RateServiceClientCallback : object, IRateServiceCallback
        {
            
            private RateServiceClient proxy;
            
            public void Initialize(RateServiceClient proxy)
            {
                this.proxy = proxy;
            }
            
            public void AssetRateUpdate(RateService.AssetRateData AssetRateRecord)
            {
                this.proxy.OnAssetRateUpdateReceived(new object[] {
                            AssetRateRecord});
            }
            
            public void CurrencyPairRateUpdate(RateService.CurrencyPairRateData CurrencyPairRateRecord)
            {
                this.proxy.OnCurrencyPairRateUpdateReceived(new object[] {
                            CurrencyPairRateRecord});
            }
            
            public void TokenRateUpdate(RateService.TokenRateData TokenRateRecord)
            {
                this.proxy.OnTokenRateUpdateReceived(new object[] {
                            TokenRateRecord});
            }
            
            public void TokenPairRateUpdate(RateService.TokenPairRateData TokenPairRateRecord)
            {
                this.proxy.OnTokenPairRateUpdateReceived(new object[] {
                            TokenPairRateRecord});
            }
        }
    }
}
