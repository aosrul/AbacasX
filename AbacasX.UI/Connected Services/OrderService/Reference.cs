//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     //
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace OrderService
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlockChainData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class BlockChainData : object
    {
        
        private string AddressField;
        
        private int BlockNumberField;
        
        private string DateField;
        
        private int OrderIdField;
        
        private string PayReceiveField;
        
        private decimal TokenAmountField;
        
        private string TokenIdField;
        
        private string TransactionHashField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlockNumber
        {
            get
            {
                return this.BlockNumberField;
            }
            set
            {
                this.BlockNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Date
        {
            get
            {
                return this.DateField;
            }
            set
            {
                this.DateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId
        {
            get
            {
                return this.OrderIdField;
            }
            set
            {
                this.OrderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PayReceive
        {
            get
            {
                return this.PayReceiveField;
            }
            set
            {
                this.PayReceiveField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TokenAmount
        {
            get
            {
                return this.TokenAmountField;
            }
            set
            {
                this.TokenAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenId
        {
            get
            {
                return this.TokenIdField;
            }
            set
            {
                this.TokenIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionHash
        {
            get
            {
                return this.TransactionHashField;
            }
            set
            {
                this.TransactionHashField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientPositionData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class ClientPositionData : object
    {
        
        private decimal TokenAmountField;
        
        private string TokenIdField;
        
        private decimal TokenRateField;
        
        private string TokenRateInField;
        
        private decimal TokenValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TokenAmount
        {
            get
            {
                return this.TokenAmountField;
            }
            set
            {
                this.TokenAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenId
        {
            get
            {
                return this.TokenIdField;
            }
            set
            {
                this.TokenIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TokenRate
        {
            get
            {
                return this.TokenRateField;
            }
            set
            {
                this.TokenRateField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TokenRateIn
        {
            get
            {
                return this.TokenRateInField;
            }
            set
            {
                this.TokenRateInField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TokenValue
        {
            get
            {
                return this.TokenValueField;
            }
            set
            {
                this.TokenValueField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class OrderData : object
    {
        
        private OrderService.OrderLegBuySellEnum BuySellTypeField;
        
        private int ClientAccountIdField;
        
        private int ClientIdField;
        
        private OrderService.OrderLegFillStatusEnum OrderFillStatusField;
        
        private int OrderIdField;
        
        private int OrderLegIdField;
        
        private decimal OrderPriceField;
        
        private OrderService.OrderPriceTermsEnum OrderPriceTermsField;
        
        private OrderService.OrderStatusEnum OrderStatusField;
        
        private OrderService.OrderTypeEnum OrderTypeField;
        
        private decimal PriceFilledField;
        
        private decimal Token1AmountField;
        
        private decimal Token1AmountFilledField;
        
        private string Token1IdField;
        
        private decimal Token2AmountField;
        
        private string Token2IdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrderService.OrderLegBuySellEnum BuySellType
        {
            get
            {
                return this.BuySellTypeField;
            }
            set
            {
                this.BuySellTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientAccountId
        {
            get
            {
                return this.ClientAccountIdField;
            }
            set
            {
                this.ClientAccountIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId
        {
            get
            {
                return this.ClientIdField;
            }
            set
            {
                this.ClientIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrderService.OrderLegFillStatusEnum OrderFillStatus
        {
            get
            {
                return this.OrderFillStatusField;
            }
            set
            {
                this.OrderFillStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderId
        {
            get
            {
                return this.OrderIdField;
            }
            set
            {
                this.OrderIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderLegId
        {
            get
            {
                return this.OrderLegIdField;
            }
            set
            {
                this.OrderLegIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal OrderPrice
        {
            get
            {
                return this.OrderPriceField;
            }
            set
            {
                this.OrderPriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrderService.OrderPriceTermsEnum OrderPriceTerms
        {
            get
            {
                return this.OrderPriceTermsField;
            }
            set
            {
                this.OrderPriceTermsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrderService.OrderStatusEnum OrderStatus
        {
            get
            {
                return this.OrderStatusField;
            }
            set
            {
                this.OrderStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrderService.OrderTypeEnum OrderType
        {
            get
            {
                return this.OrderTypeField;
            }
            set
            {
                this.OrderTypeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PriceFilled
        {
            get
            {
                return this.PriceFilledField;
            }
            set
            {
                this.PriceFilledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Token1Amount
        {
            get
            {
                return this.Token1AmountField;
            }
            set
            {
                this.Token1AmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Token1AmountFilled
        {
            get
            {
                return this.Token1AmountFilledField;
            }
            set
            {
                this.Token1AmountFilledField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token1Id
        {
            get
            {
                return this.Token1IdField;
            }
            set
            {
                this.Token1IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Token2Amount
        {
            get
            {
                return this.Token2AmountField;
            }
            set
            {
                this.Token2AmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token2Id
        {
            get
            {
                return this.Token2IdField;
            }
            set
            {
                this.Token2IdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderLegBuySellEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.Models")]
    public enum OrderLegBuySellEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Buy = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sell = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderLegFillStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.Models")]
    public enum OrderLegFillStatusEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Partial = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Full = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderPriceTermsEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.Models")]
    public enum OrderPriceTermsEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Token1PerToken2 = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Token2PerToken1 = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.Models")]
    public enum OrderStatusEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Contingent = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Active = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suspended = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Filled = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Expired = 6,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OrderTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.Models")]
    public enum OrderTypeEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Market = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Limit = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IfDone = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        OCO = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        IfDoneOCO = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetTransferData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class AssetTransferData : object
    {
        
        private decimal assetAmountField;
        
        private string assetIdField;
        
        private int clientIdField;
        
        private string forAccountOfField;
        
        private string referenceIdField;
        
        private decimal tokenAmountField;
        
        private string tokenIdField;
        
        private OrderService.TransferStatusEnum transferStatusField;
        
        private OrderService.TransferTypeEnum transferTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal assetAmount
        {
            get
            {
                return this.assetAmountField;
            }
            set
            {
                this.assetAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string assetId
        {
            get
            {
                return this.assetIdField;
            }
            set
            {
                this.assetIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int clientId
        {
            get
            {
                return this.clientIdField;
            }
            set
            {
                this.clientIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string forAccountOf
        {
            get
            {
                return this.forAccountOfField;
            }
            set
            {
                this.forAccountOfField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string referenceId
        {
            get
            {
                return this.referenceIdField;
            }
            set
            {
                this.referenceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal tokenAmount
        {
            get
            {
                return this.tokenAmountField;
            }
            set
            {
                this.tokenAmountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tokenId
        {
            get
            {
                return this.tokenIdField;
            }
            set
            {
                this.tokenIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrderService.TransferStatusEnum transferStatus
        {
            get
            {
                return this.transferStatusField;
            }
            set
            {
                this.transferStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public OrderService.TransferTypeEnum transferType
        {
            get
            {
                return this.transferTypeField;
            }
            set
            {
                this.transferTypeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferStatusEnum", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum TransferStatusEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Requested = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InProgress = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Completed = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Failed = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TransferTypeEnum", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum TransferTypeEnum : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deposit = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Withdrawal = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetDepositData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class AssetDepositData : object
    {
        
        private decimal amountField;
        
        private string assetIdField;
        
        private int clientIdField;
        
        private string referenceIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal amount
        {
            get
            {
                return this.amountField;
            }
            set
            {
                this.amountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string assetId
        {
            get
            {
                return this.assetIdField;
            }
            set
            {
                this.assetIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int clientId
        {
            get
            {
                return this.clientIdField;
            }
            set
            {
                this.clientIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string referenceId
        {
            get
            {
                return this.referenceIdField;
            }
            set
            {
                this.referenceIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AssetWithdrawalData", Namespace="http://schemas.datacontract.org/2004/07/AbacasX.Model.DataContracts")]
    public partial class AssetWithdrawalData : object
    {
        
        private decimal amountField;
        
        private int clientIdField;
        
        private string referenceIdField;
        
        private string tokenIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal amount
        {
            get
            {
                return this.amountField;
            }
            set
            {
                this.amountField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int clientId
        {
            get
            {
                return this.clientIdField;
            }
            set
            {
                this.clientIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string referenceId
        {
            get
            {
                return this.referenceIdField;
            }
            set
            {
                this.referenceIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string tokenId
        {
            get
            {
                return this.tokenIdField;
            }
            set
            {
                this.tokenIdField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderService.IOrderService", CallbackContract=typeof(OrderService.IOrderServiceCallback))]
    public interface IOrderService
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetClientBlockChainTransactions", ReplyAction="http://tempuri.org/IOrderService/GetClientBlockChainTransactionsResponse")]
        System.Threading.Tasks.Task<OrderService.BlockChainData[]> GetClientBlockChainTransactionsAsync(int ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetClientPositions", ReplyAction="http://tempuri.org/IOrderService/GetClientPositionsResponse")]
        System.Threading.Tasks.Task<OrderService.ClientPositionData[]> GetClientPositionsAsync(int ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetClientTokenBalance", ReplyAction="http://tempuri.org/IOrderService/GetClientTokenBalanceResponse")]
        System.Threading.Tasks.Task<decimal> GetClientTokenBalanceAsync(int ClientId, string TokenId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetClientOrders", ReplyAction="http://tempuri.org/IOrderService/GetClientOrdersResponse")]
        System.Threading.Tasks.Task<OrderService.OrderData[]> GetClientOrdersAsync(int ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetClientHistoricalOrders", ReplyAction="http://tempuri.org/IOrderService/GetClientHistoricalOrdersResponse")]
        System.Threading.Tasks.Task<OrderService.OrderData[]> GetClientHistoricalOrdersAsync(int ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetClientTransferActivity", ReplyAction="http://tempuri.org/IOrderService/GetClientTransferActivityResponse")]
        System.Threading.Tasks.Task<OrderService.AssetTransferData[]> GetClientTransferActivityAsync(int ClientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddOrder", ReplyAction="http://tempuri.org/IOrderService/AddOrderResponse")]
        System.Threading.Tasks.Task<OrderService.OrderData> AddOrderAsync(OrderService.OrderData orderData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetOrder", ReplyAction="http://tempuri.org/IOrderService/GetOrderResponse")]
        System.Threading.Tasks.Task<OrderService.OrderData> GetOrderAsync(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/SuspendOrder", ReplyAction="http://tempuri.org/IOrderService/SuspendOrderResponse")]
        System.Threading.Tasks.Task<int> SuspendOrderAsync(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/CancelOrder", ReplyAction="http://tempuri.org/IOrderService/CancelOrderResponse")]
        System.Threading.Tasks.Task<int> CancelOrderAsync(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ActivateOrder", ReplyAction="http://tempuri.org/IOrderService/ActivateOrderResponse")]
        System.Threading.Tasks.Task<int> ActivateOrderAsync(int OrderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/GetNewGuid", ReplyAction="http://tempuri.org/IOrderService/GetNewGuidResponse")]
        System.Threading.Tasks.Task<string> GetNewGuidAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddDeposit", ReplyAction="http://tempuri.org/IOrderService/AddDepositResponse")]
        System.Threading.Tasks.Task<OrderService.AssetDepositData> AddDepositAsync(OrderService.AssetDepositData depositNotification);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/AddWithdrawal", ReplyAction="http://tempuri.org/IOrderService/AddWithdrawalResponse")]
        System.Threading.Tasks.Task<OrderService.AssetWithdrawalData> AddWithdrawalAsync(OrderService.AssetWithdrawalData withdrawalRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/IsBrokerLiquidityOn", ReplyAction="http://tempuri.org/IOrderService/IsBrokerLiquidityOnResponse")]
        System.Threading.Tasks.Task<bool> IsBrokerLiquidityOnAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderService/ToggleBrokerLiquidity", ReplyAction="http://tempuri.org/IOrderService/ToggleBrokerLiquidityResponse")]
        System.Threading.Tasks.Task<bool> ToggleBrokerLiquidityAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IOrderServiceCallback
    {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderService/OrderAdded")]
        void OrderAdded(OrderService.OrderData orderData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderService/DepositAdded")]
        void DepositAdded(OrderService.AssetDepositData depositData);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IOrderService/WithdrawalAdded")]
        void WithdrawalAdded(OrderService.AssetWithdrawalData withdrawalData);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public interface IOrderServiceChannel : OrderService.IOrderService, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("dotnet-svcutil", "1.0.0.1")]
    public partial class OrderServiceClientBase : System.ServiceModel.DuplexClientBase<OrderService.IOrderService>, OrderService.IOrderService
    {
        
    /// <summary>
    /// Implement this partial method to configure the service endpoint.
    /// </summary>
    /// <param name="serviceEndpoint">The endpoint to configure</param>
    /// <param name="clientCredentials">The client credentials</param>
    static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public OrderServiceClientBase(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance, OrderServiceClientBase.GetDefaultBinding(), OrderServiceClientBase.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.NetHttpBinding_IOrderService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrderServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration) : 
                base(callbackInstance, OrderServiceClientBase.GetBindingForEndpoint(endpointConfiguration), OrderServiceClientBase.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrderServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(callbackInstance, OrderServiceClientBase.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrderServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, OrderServiceClientBase.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrderServiceClientBase(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<OrderService.BlockChainData[]> GetClientBlockChainTransactionsAsync(int ClientId)
        {
            return base.Channel.GetClientBlockChainTransactionsAsync(ClientId);
        }
        
        public System.Threading.Tasks.Task<OrderService.ClientPositionData[]> GetClientPositionsAsync(int ClientId)
        {
            return base.Channel.GetClientPositionsAsync(ClientId);
        }
        
        public System.Threading.Tasks.Task<decimal> GetClientTokenBalanceAsync(int ClientId, string TokenId)
        {
            return base.Channel.GetClientTokenBalanceAsync(ClientId, TokenId);
        }
        
        public System.Threading.Tasks.Task<OrderService.OrderData[]> GetClientOrdersAsync(int ClientId)
        {
            return base.Channel.GetClientOrdersAsync(ClientId);
        }
        
        public System.Threading.Tasks.Task<OrderService.OrderData[]> GetClientHistoricalOrdersAsync(int ClientId)
        {
            return base.Channel.GetClientHistoricalOrdersAsync(ClientId);
        }
        
        public System.Threading.Tasks.Task<OrderService.AssetTransferData[]> GetClientTransferActivityAsync(int ClientId)
        {
            return base.Channel.GetClientTransferActivityAsync(ClientId);
        }
        
        public System.Threading.Tasks.Task<OrderService.OrderData> AddOrderAsync(OrderService.OrderData orderData)
        {
            return base.Channel.AddOrderAsync(orderData);
        }
        
        public System.Threading.Tasks.Task<OrderService.OrderData> GetOrderAsync(int OrderId)
        {
            return base.Channel.GetOrderAsync(OrderId);
        }
        
        public System.Threading.Tasks.Task<int> SuspendOrderAsync(int OrderId)
        {
            return base.Channel.SuspendOrderAsync(OrderId);
        }
        
        public System.Threading.Tasks.Task<int> CancelOrderAsync(int OrderId)
        {
            return base.Channel.CancelOrderAsync(OrderId);
        }
        
        public System.Threading.Tasks.Task<int> ActivateOrderAsync(int OrderId)
        {
            return base.Channel.ActivateOrderAsync(OrderId);
        }
        
        public System.Threading.Tasks.Task<string> GetNewGuidAsync()
        {
            return base.Channel.GetNewGuidAsync();
        }
        
        public System.Threading.Tasks.Task<OrderService.AssetDepositData> AddDepositAsync(OrderService.AssetDepositData depositNotification)
        {
            return base.Channel.AddDepositAsync(depositNotification);
        }
        
        public System.Threading.Tasks.Task<OrderService.AssetWithdrawalData> AddWithdrawalAsync(OrderService.AssetWithdrawalData withdrawalRequest)
        {
            return base.Channel.AddWithdrawalAsync(withdrawalRequest);
        }
        
        public System.Threading.Tasks.Task<bool> IsBrokerLiquidityOnAsync()
        {
            return base.Channel.IsBrokerLiquidityOnAsync();
        }
        
        public System.Threading.Tasks.Task<bool> ToggleBrokerLiquidityAsync()
        {
            return base.Channel.ToggleBrokerLiquidityAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IOrderService))
            {
                System.ServiceModel.NetHttpBinding result = new System.ServiceModel.NetHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.NetHttpBinding_IOrderService))
            {
                return new System.ServiceModel.EndpointAddress("ws://localhost:58984/OrderManagerService.svc");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return OrderServiceClientBase.GetBindingForEndpoint(EndpointConfiguration.NetHttpBinding_IOrderService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return OrderServiceClientBase.GetEndpointAddress(EndpointConfiguration.NetHttpBinding_IOrderService);
        }
        
        public enum EndpointConfiguration
        {
            
            NetHttpBinding_IOrderService,
        }
    }
    
    public class OrderAddedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public OrderAddedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public OrderService.OrderData orderData
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((OrderService.OrderData)(this.results[0]));
            }
        }
    }
    
    public class DepositAddedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public DepositAddedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public OrderService.AssetDepositData depositData
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((OrderService.AssetDepositData)(this.results[0]));
            }
        }
    }
    
    public class WithdrawalAddedReceivedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        
        private object[] results;
        
        public WithdrawalAddedReceivedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState)
        {
            this.results = results;
        }
        
        public OrderService.AssetWithdrawalData withdrawalData
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((OrderService.AssetWithdrawalData)(this.results[0]));
            }
        }
    }
    
    public partial class OrderServiceClient : OrderServiceClientBase
    {
        
        public OrderServiceClient(EndpointConfiguration endpointConfiguration) : 
                this(new OrderServiceClientCallback(), endpointConfiguration)
        {
        }
        
        private OrderServiceClient(OrderServiceClientCallback callbackImpl, EndpointConfiguration endpointConfiguration) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), endpointConfiguration)
        {
            callbackImpl.Initialize(this);
        }
        
        public OrderServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                this(new OrderServiceClientCallback(), binding, remoteAddress)
        {
        }
        
        private OrderServiceClient(OrderServiceClientCallback callbackImpl, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl), binding, remoteAddress)
        {
            callbackImpl.Initialize(this);
        }
        
        public OrderServiceClient() : 
                this(new OrderServiceClientCallback())
        {
        }
        
        private OrderServiceClient(OrderServiceClientCallback callbackImpl) : 
                base(new System.ServiceModel.InstanceContext(callbackImpl))
        {
            callbackImpl.Initialize(this);
        }
        
        public event System.EventHandler<OrderAddedReceivedEventArgs> OrderAddedReceived;
        
        public event System.EventHandler<DepositAddedReceivedEventArgs> DepositAddedReceived;
        
        public event System.EventHandler<WithdrawalAddedReceivedEventArgs> WithdrawalAddedReceived;
        
        private void OnOrderAddedReceived(object state)
        {
            if ((this.OrderAddedReceived != null))
            {
                object[] results = ((object[])(state));
                this.OrderAddedReceived(this, new OrderAddedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnDepositAddedReceived(object state)
        {
            if ((this.DepositAddedReceived != null))
            {
                object[] results = ((object[])(state));
                this.DepositAddedReceived(this, new DepositAddedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private void OnWithdrawalAddedReceived(object state)
        {
            if ((this.WithdrawalAddedReceived != null))
            {
                object[] results = ((object[])(state));
                this.WithdrawalAddedReceived(this, new WithdrawalAddedReceivedEventArgs(results, null, false, null));
            }
        }
        
        private class OrderServiceClientCallback : object, IOrderServiceCallback
        {
            
            private OrderServiceClient proxy;
            
            public void Initialize(OrderServiceClient proxy)
            {
                this.proxy = proxy;
            }
            
            public void OrderAdded(OrderService.OrderData orderData)
            {
                this.proxy.OnOrderAddedReceived(new object[] {
                            orderData});
            }
            
            public void DepositAdded(OrderService.AssetDepositData depositData)
            {
                this.proxy.OnDepositAddedReceived(new object[] {
                            depositData});
            }
            
            public void WithdrawalAdded(OrderService.AssetWithdrawalData withdrawalData)
            {
                this.proxy.OnWithdrawalAddedReceived(new object[] {
                            withdrawalData});
            }
        }
    }
}
